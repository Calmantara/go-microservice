// Code generated by MockGen. DO NOT EDIT.
// Source: balance.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	entity "github.com/Calmantara/go-wallet/entity"
	model "github.com/Calmantara/go-wallet/model"
	gomock "github.com/golang/mock/gomock"
)

// MockBalanceRepo is a mock of BalanceRepo interface.
type MockBalanceRepo struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceRepoMockRecorder
}

// MockBalanceRepoMockRecorder is the mock recorder for MockBalanceRepo.
type MockBalanceRepoMockRecorder struct {
	mock *MockBalanceRepo
}

// NewMockBalanceRepo creates a new mock instance.
func NewMockBalanceRepo(ctrl *gomock.Controller) *MockBalanceRepo {
	mock := &MockBalanceRepo{ctrl: ctrl}
	mock.recorder = &MockBalanceRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceRepo) EXPECT() *MockBalanceRepoMockRecorder {
	return m.recorder
}

// InsertBalance mocks base method.
func (m *MockBalanceRepo) InsertBalance(ctx context.Context, balance *entity.Balance) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertBalance", ctx, balance)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertBalance indicates an expected call of InsertBalance.
func (mr *MockBalanceRepoMockRecorder) InsertBalance(ctx, balance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertBalance", reflect.TypeOf((*MockBalanceRepo)(nil).InsertBalance), ctx, balance)
}

// ReadBalance mocks base method.
func (m *MockBalanceRepo) ReadBalance(ctx context.Context, walletBalance *model.WalletBalance) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadBalance", ctx, walletBalance)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReadBalance indicates an expected call of ReadBalance.
func (mr *MockBalanceRepoMockRecorder) ReadBalance(ctx, walletBalance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadBalance", reflect.TypeOf((*MockBalanceRepo)(nil).ReadBalance), ctx, walletBalance)
}
